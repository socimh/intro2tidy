---
theme: united
lang: zh
toc: true
toc-depth: 3
toc-expand: 2
toc-title: 本页目录
number-sections: true
---

# dplyr 排序

在 tidyverse 中，dplyr 是清理数据的最重要的包。下面，我将从最简单的排序函数开始介绍。

我们通常需要手动排序变量。而在排序个案时，因为变量具有算术性，所以我们可以根据某个（或某些）变量的取值，对个案进行快速排序。

-   排序列（变量）
    -   `relocate()` 把变量[**手动**]{style="color:darkred"}挪到开头
        -   `.before` 和 `.after` [**精确地**]{style="color:darkred"}把变量挪到某个位置
-   排序行（个案）
    -   `arrange()` 根据[**变量取值**]{style="color:darkred"}排序个案

## `relocate()`

让我们回到前面摘出来的示例数据。

```{r}
#| code-fold: false
#| warning: false

library(tidyverse)

diamonds # 示例数据
```

接下来，我将运行一些 `relocate()` 函数的示例，请特别关注列的顺序变化。

```{r}
#| code-fold: false
#| warning: false

relocate(diamonds, price) # 把price变量提到最前，其余顺序不变
```

## `.before` 和 `.after`

```{r}
#| code-fold: false
#| warning: false

relocate(diamonds, price, .before = cut) # 把price提到cut之前，其余顺序不变
relocate(diamonds, price, .after = cut) # 把price提到cut之后，其余顺序不变
```

## `arrange()`

在整洁数据中，对个案排序需要借助变量。

-   在小学里，根据学号[*（变量）*]{style="color:gray"}排序，变的是小学生[*（个案）*]{style="color:gray"}的顺序。
-   在网购时，根据商品价格[*（变量）*]{style="color:gray"}排序，变的是商品[*（个案）*]{style="color:gray"}的顺序。
-   在12306买票时，根据列车发车时间[*（变量）*]{style="color:gray"}排序，变的是列车[*（个案）*]{style="color:gray"}的顺序。

::: callout-important
## 重要

变量的每个值都是一条个案，所以对单个变量排序的本质是改变个案顺序！
:::

这里我们借助了变量的统计能力（算术性）。反过来说，因为个案不具备统计能力，所以我们无法对变量做类似的排序，只能手动调整它们的位置。

```{r}
#| code-fold: false
#| warning: false

arrange(diamonds, price) # 根据price变量升序（从低到高）
arrange(diamonds, -price) # 根据price变量降序（从高到低）
```
